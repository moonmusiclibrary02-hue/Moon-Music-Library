# This is the CI/CD pipeline for your React frontend.
# It automatically builds and deploys the frontend to Google Cloud Run
# whenever you push changes to the 'frontend' folder on the 'main' branch.

name: Deploy Frontend to Cloud Run

on:
  push:
    branches: [ "main" ]
  paths:
    - 'frontend/**'
    - '.github/workflows/frontend-deploy.yml'

jobs:
  deploy:
    name: Build and Deploy Frontend
    runs-on: ubuntu-latest

    steps:
      # Standard steps to check out code and authenticate to Google Cloud.
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      # Build the frontend Docker image and push it to Google Artifact Registry.
      - name: Build and Push Docker Image
        run: |-
          gcloud auth configure-docker gcr.io
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/music-frontend-image:latest ./frontend
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/music-frontend-image:latest

      # Deploy the new image to Cloud Run. This is where we inject the
      # backend's public URL as an environment variable into the frontend container.
      - name: Deploy to Cloud Run with Backend URL
        uses: google-github-actions/deploy-run@v2
        with:
          service: music-frontend-service
          region: us-central1
          image: gcr.io/${{ secrets.GCP_PROJECT_ID }}/music-frontend-image:latest
          env-vars:
            # This makes the backend's URL available to our 'entrypoint.sh' script
            # inside the running container.
            - name: BACKEND_URL
              value: ${{ secrets.BACKEND_URL }}
